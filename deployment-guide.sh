#!/bin/bash

echo "ðŸš€ Registration Management - Vercel Deployment Guide"
echo "=================================================="
echo ""

echo "âœ… Deployment files created:"
echo "   - vercel.json (Vercel configuration)"
echo "   - .env.example (Environment variables template)"
echo "   - README.md (Comprehensive deployment guide)"
echo "   - .vercelignore (Files to exclude from deployment)"
echo "   - deploy.sh (This deployment script)"
echo ""

echo "ðŸ“‹ Next Steps:"
echo ""
echo "1. Create a GitHub repository (if not already done):"
echo "   - Go to https://github.com/new"
echo "   - Create a new repository"
echo "   - Copy the repository URL"
echo ""

echo "2. Add the remote repository:"
echo "   git remote add origin <your-github-repo-url>"
echo "   git push -u origin main"
echo ""

echo "3. Deploy to Vercel:"
echo ""
echo "   Option A - Using Vercel Dashboard (Recommended):"
echo "   - Go to https://vercel.com/dashboard"
echo "   - Click 'New Project'"
echo "   - Import your GitHub repository"
echo "   - Set environment variables:"
echo "     * SUPABASE_URL=your_supabase_url"
echo "     * SUPABASE_PUBLIC_ANON_KEY=your_supabase_key"
echo "     * NODE_ENV=production"
echo "   - Click Deploy"
echo ""

echo "   Option B - Using Vercel CLI:"
echo "   - Install: npm i -g vercel"
echo "   - Run: vercel"
echo "   - Follow the prompts"
echo "   - Set environment variables: vercel env add"
echo ""

echo "4. Post-deployment:"
echo "   - Update CORS settings in server.js with your Vercel domain"
echo "   - Test all functionality"
echo "   - Monitor logs in Vercel dashboard"
echo ""

echo "ðŸ”§ Environment Variables Required:"
echo "   - SUPABASE_URL"
echo "   - SUPABASE_PUBLIC_ANON_KEY"
echo "   - NODE_ENV (set to 'production')"
echo ""

echo "ðŸ“– For detailed instructions, see README.md"
echo ""
echo "ðŸ†˜ Need help? Check the troubleshooting section in README.md"
